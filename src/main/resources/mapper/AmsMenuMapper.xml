<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.joker.ams.dao.AmsMenuDao">

    <resultMap type="com.joker.ams.entity.AmsMenu" id="AmsMenuMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="menuName" column="menu_name" jdbcType="VARCHAR"/>
        <result property="path" column="path" jdbcType="VARCHAR"/>
        <result property="component" column="component" jdbcType="VARCHAR"/>
        <result property="visible" column="visible" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="VARCHAR"/>
        <result property="perms" column="perms" jdbcType="VARCHAR"/>
        <result property="icon" column="icon" jdbcType="VARCHAR"/>
        <result property="createBy" column="create_by" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="delFlag" column="del_flag" jdbcType="INTEGER"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="AmsMenuMap">
        select id,
               menu_name,
               path,
               component,
               visible,
               status,
               perms,
               icon,
               create_by,
               create_time,
               update_by,
               update_time,
               del_flag,
               remark
        from ams_menu
        where id = #{id}
    </select>
    <!--查询用户权限-->
    <select id="selectPermsByUserId" parameterType="long" resultType="string">
        SELECT DISTINCT perms
        FROM ams_menu m,ams_role_menu r_m,ams_user_role u_r
        WHERE 		u_r.user_id=#{userId}
          and r_m.role_id=u_r.role_id
          and m.id=r_m.menu_id
          and `status` ='0'
    </select>


    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="AmsMenuMap">
        select
        id, menu_name, path, component, visible, status, perms, icon, create_by, create_time, update_by, update_time,
        del_flag, remark
        from ams_menu
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="menuName != null and menuName != ''">
                and menu_name = #{menuName}
            </if>
            <if test="path != null and path != ''">
                and path = #{path}
            </if>
            <if test="component != null and component != ''">
                and component = #{component}
            </if>
            <if test="visible != null and visible != ''">
                and visible = #{visible}
            </if>
            <if test="status != null and status != ''">
                and status = #{status}
            </if>
            <if test="perms != null and perms != ''">
                and perms = #{perms}
            </if>
            <if test="icon != null and icon != ''">
                and icon = #{icon}
            </if>
            <if test="createBy != null">
                and create_by = #{createBy}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateBy != null">
                and update_by = #{updateBy}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="delFlag != null">
                and del_flag = #{delFlag}
            </if>
            <if test="remark != null and remark != ''">
                and remark = #{remark}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from ams_menu
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="menuName != null and menuName != ''">
                and menu_name = #{menuName}
            </if>
            <if test="path != null and path != ''">
                and path = #{path}
            </if>
            <if test="component != null and component != ''">
                and component = #{component}
            </if>
            <if test="visible != null and visible != ''">
                and visible = #{visible}
            </if>
            <if test="status != null and status != ''">
                and status = #{status}
            </if>
            <if test="perms != null and perms != ''">
                and perms = #{perms}
            </if>
            <if test="icon != null and icon != ''">
                and icon = #{icon}
            </if>
            <if test="createBy != null">
                and create_by = #{createBy}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateBy != null">
                and update_by = #{updateBy}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="delFlag != null">
                and del_flag = #{delFlag}
            </if>
            <if test="remark != null and remark != ''">
                and remark = #{remark}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into ams_menu(menu_name, path, component, visible, status, perms, icon, create_by, create_time,
                             update_by, update_time, del_flag, remark)
        values (#{menuName}, #{path}, #{component}, #{visible}, #{status}, #{perms}, #{icon}, #{createBy},
                #{createTime}, #{updateBy}, #{updateTime}, #{delFlag}, #{remark})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into ams_menu(menu_name, path, component, visible, status, perms, icon, create_by, create_time,
        update_by, update_time, del_flag, remark)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.menuName}, #{entity.path}, #{entity.component}, #{entity.visible}, #{entity.status},
            #{entity.perms}, #{entity.icon}, #{entity.createBy}, #{entity.createTime}, #{entity.updateBy},
            #{entity.updateTime}, #{entity.delFlag}, #{entity.remark})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into ams_menu(menu_name, path, component, visible, status, perms, icon, create_by, create_time,
        update_by, update_time, del_flag, remark)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.menuName}, #{entity.path}, #{entity.component}, #{entity.visible}, #{entity.status},
            #{entity.perms}, #{entity.icon}, #{entity.createBy}, #{entity.createTime}, #{entity.updateBy},
            #{entity.updateTime}, #{entity.delFlag}, #{entity.remark})
        </foreach>
        on duplicate key update
        menu_name = values(menu_name),
        path = values(path),
        component = values(component),
        visible = values(visible),
        status = values(status),
        perms = values(perms),
        icon = values(icon),
        create_by = values(create_by),
        create_time = values(create_time),
        update_by = values(update_by),
        update_time = values(update_time),
        del_flag = values(del_flag),
        remark = values(remark)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update ams_menu
        <set>
            <if test="menuName != null and menuName != ''">
                menu_name = #{menuName},
            </if>
            <if test="path != null and path != ''">
                path = #{path},
            </if>
            <if test="component != null and component != ''">
                component = #{component},
            </if>
            <if test="visible != null and visible != ''">
                visible = #{visible},
            </if>
            <if test="status != null and status != ''">
                status = #{status},
            </if>
            <if test="perms != null and perms != ''">
                perms = #{perms},
            </if>
            <if test="icon != null and icon != ''">
                icon = #{icon},
            </if>
            <if test="createBy != null">
                create_by = #{createBy},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from ams_menu
        where id = #{id}
    </delete>

</mapper>

