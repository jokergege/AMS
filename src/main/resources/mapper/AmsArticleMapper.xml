<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.joker.ams.dao.AmsArticleDao">

    <resultMap type="com.joker.ams.entity.AmsArticle" id="AmsArticleMap">
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="articleId" column="article_id" jdbcType="INTEGER"/>
        <result property="author" column="author" jdbcType="VARCHAR"/>
        <result property="sort" column="sort" jdbcType="VARCHAR"/>
        <result property="time" column="time" jdbcType="TIMESTAMP"/>
        <result property="star" column="star" jdbcType="INTEGER"/>
        <result property="visit" column="visit" jdbcType="INTEGER"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="synopsis" column="synopsis" jdbcType="VARCHAR"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="sortId" column="sort_id" jdbcType="INTEGER"/>
    </resultMap>


    <!--查询收藏最多的一个文章-->
    <select id="getMaxStarArticle" resultMap="AmsArticleMap">
        select *
        from ams_article
        where star = (select MAX(star) from ams_article)
    </select>

    <!--查询更多的被收藏文章-->
    <select id="getMoreStarArticles" resultMap="AmsArticleMap">
        select *
        from ams_article
        order by star
                desc
    </select>

    <!--分页查询-->
    <select id="getArticleList" resultMap="AmsArticleMap">
        select title,
        article_id,
        author,
        sort, time, star, visit, content, synopsis, user_id
        from ams_article
        <if test="user_id!=null">
            where user_id = #{user_id}
        </if>
        limit #{start}, #{size}
    </select>


    <!--得到显示数据总数-->
    <select id="getArticleCount" resultType="java.lang.Integer">
        select count(*)
        from ams_article
        <if test="user_id != null">
            where user_id=#{user_id}
        </if>
    </select>

    <!--查询单个-->
    <select id="queryArticleById" resultMap="AmsArticleMap">
        select title,
               article_id,
               author,
               sort, time, star, visit, content, synopsis, user_id, sort_id
        from ams_article
        where article_id = #{articleId}
    </select>

    <!--新增所有列-->
    <insert id="insertArticle" keyProperty="articleId" useGeneratedKeys="true">
        insert into ams_article(title, author, sort, time, star, visit, content, synopsis, user_id, sort_id)
        values (#{title}, #{author}, #{sort}, #{time}, #{star}, #{visit}, #{content}, #{synopsis}, #{userId}, #{sortId})
    </insert>

    <!--通过主键修改数据-->
    <update id="updateArticle" keyProperty="article_id" useGeneratedKeys="true">
        update ams_article
        <set>
            <if test="title != null and title != ''">
                title = #{title},
            </if>
            <if test="author != null and author != ''">
                author = #{author},
            </if>
            <if test="sort != null and sort != ''">
                sort = #{sort},
            </if>
            <if test="time != null">
                time = #{time},
            </if>
            <if test="star != null">
                star = #{star},
            </if>
            <if test="visit != null">
                visit = #{visit},
            </if>
            <if test="content != null and content != ''">
                content = #{content},
            </if>
            <if test="synopsis != null and synopsis != ''">
                synopsis = #{synopsis},
            </if>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="sortId != null">
                sort_id = #{sortId},
            </if>
        </set>
        where article_id = #{articleId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from ams_article
        where article_id = #{articleId}
    </delete>

</mapper>

