<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.joker.ams.dao.AmsUserDao">

    <resultMap type="com.joker.ams.entity.AmsUser" id="AmsUserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userName" column="user_name" jdbcType="VARCHAR"/>
        <result property="nickName" column="nick_name" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="phoneNumber" column="phone_number" jdbcType="VARCHAR"/>
        <result property="sex" column="sex" jdbcType="VARCHAR"/>
        <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
        <result property="userType" column="user_type" jdbcType="VARCHAR"/>
        <result property="createBy" column="create_by" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="delFlag" column="del_flag" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="AmsUserMap">
        select id,
               user_name,
               nick_name,
               password,
               status,
               email,
               phone_number,
               sex,
               avatar,
               user_type,
               create_by,
               create_time,
               update_by,
               update_time,
               del_flag
        from ams_user
        where id = #{id}
    </select>

    <select id="queryUserByName" resultMap="AmsUserMap">
        select id,
               user_name,
               nick_name,
               password,
               status,
               email,
               phone_number,
               sex,
               avatar,
               user_type,
               create_by,
               create_time,
               update_by,
               update_time,
               del_flag
        from ams_user
        where user_name = #{userName}
    </select>

<!--用户注册-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true" parameterType="com.joker.ams.entity.AmsUser">
        insert into ams_user(user_name, nick_name, password, status, email, phone_number, sex, avatar, user_type,
                             create_by, create_time, update_by, update_time, del_flag)
        values (#{userName}, #{nickName}, #{password}, #{status}, #{email}, #{phoneNumber}, #{sex}, #{avatar},
                #{userType}, #{createBy}, #{createTime}, #{updateBy}, #{updateTime}, #{delFlag})
    </insert>
    <!--分页查询-->
    <select id="getUserList" resultMap="AmsUserMap">
        select  id, user_name, nick_name, password, status, email, phone_number, sex, avatar, user_type, create_by, create_time,
                update_by, update_time, del_flag
        from ams_user limit #{start}, #{size}
    </select>

    <select id="getUserCount" resultType="java.lang.Integer">
        select count(*)
        from ams_user
    </select>

    <!--通过手机号查用户信息-->
    <select id="queryUserByPhone" resultMap="AmsUserMap">
        select  id, user_name, nick_name, password, status, email, phone_number, sex, avatar, user_type, create_by, create_time,
                update_by, update_time, del_flag
        from ams_user
        where phone_number = #{phoneNumber}
    </select>


    <!--更新用户密码-->
    <update id="updatePassword">
        update ams_user
        set password=#{password}
        where user_name = #{userName}
    </update>



    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="AmsUserMap">
        select
        id, user_name, nick_name, password, status, email, phone_number, sex, avatar, user_type, create_by, create_time,
        update_by, update_time, del_flag
        from ams_user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userName != null and userName != ''">
                and user_name = #{userName}
            </if>
            <if test="nickName != null and nickName != ''">
                and nick_name = #{nickName}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="status != null and status != ''">
                and status = #{status}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="phoneNumber != null and phoneNumber != ''">
                and phone_number = #{phoneNumber}
            </if>
            <if test="sex != null and sex != ''">
                and sex = #{sex}
            </if>
            <if test="avatar != null and avatar != ''">
                and avatar = #{avatar}
            </if>
            <if test="userType != null and userType != ''">
                and user_type = #{userType}
            </if>
            <if test="createBy != null">
                and create_by = #{createBy}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateBy != null">
                and update_by = #{updateBy}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="delFlag != null">
                and del_flag = #{delFlag}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from ams_user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userName != null and userName != ''">
                and user_name = #{userName}
            </if>
            <if test="nickName != null and nickName != ''">
                and nick_name = #{nickName}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="status != null and status != ''">
                and status = #{status}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="phoneNumber != null and phoneNumber != ''">
                and phone_number = #{phoneNumber}
            </if>
            <if test="sex != null and sex != ''">
                and sex = #{sex}
            </if>
            <if test="avatar != null and avatar != ''">
                and avatar = #{avatar}
            </if>
            <if test="userType != null and userType != ''">
                and user_type = #{userType}
            </if>
            <if test="createBy != null">
                and create_by = #{createBy}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateBy != null">
                and update_by = #{updateBy}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="delFlag != null">
                and del_flag = #{delFlag}
            </if>
        </where>
    </select>



    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into ams_user(user_name, nick_name, password, status, email, phone_number, sex, avatar, user_type,
        create_by, create_time, update_by, update_time, del_flag)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userName}, #{entity.nickName}, #{entity.password}, #{entity.status}, #{entity.email},
            #{entity.phoneNumber}, #{entity.sex}, #{entity.avatar}, #{entity.userType}, #{entity.createBy},
            #{entity.createTime}, #{entity.updateBy}, #{entity.updateTime}, #{entity.delFlag})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into ams_user(user_name, nick_name, password, status, email, phone_number, sex, avatar, user_type,
        create_by, create_time, update_by, update_time, del_flag)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userName}, #{entity.nickName}, #{entity.password}, #{entity.status}, #{entity.email},
            #{entity.phoneNumber}, #{entity.sex}, #{entity.avatar}, #{entity.userType}, #{entity.createBy},
            #{entity.createTime}, #{entity.updateBy}, #{entity.updateTime}, #{entity.delFlag})
        </foreach>
        on duplicate key update
        user_name = values(user_name),
        nick_name = values(nick_name),
        password = values(password),
        status = values(status),
        email = values(email),
        phone_number = values(phone_number),
        sex = values(sex),
        avatar = values(avatar),
        user_type = values(user_type),
        create_by = values(create_by),
        create_time = values(create_time),
        update_by = values(update_by),
        update_time = values(update_time),
        del_flag = values(del_flag)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update ams_user
        <set>
            <if test="userName != null and userName != ''">
                user_name = #{userName},
            </if>
            <if test="nickName != null and nickName != ''">
                nick_name = #{nickName},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="status != null and status != ''">
                status = #{status},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="phoneNumber != null and phoneNumber != ''">
                phone_number = #{phoneNumber},
            </if>
            <if test="sex != null and sex != ''">
                sex = #{sex},
            </if>
            <if test="avatar != null and avatar != ''">
                avatar = #{avatar},
            </if>
            <if test="userType != null and userType != ''">
                user_type = #{userType},
            </if>
            <if test="createBy != null">
                create_by = #{createBy},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from ams_user
        where id = #{id}
    </delete>

</mapper>

